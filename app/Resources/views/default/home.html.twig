{% extends 'base.html.twig' %}

{% block body %}
<div role="toolbar" class="btn-group pull-left">
    <a id="btn-index" role="button" class="btn btn-default navbar-btn">
        <span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>
        Index
    </a>
    <a id="btn-preview" role="button" class="btn btn-default navbar-btn disabled">
        <span class="glyphicon glyphicon-sunglasses" aria-hidden="true"></span>
        Preview
    </a>
    <a id="btn-download" role="button" class="btn btn-default navbar-btn disabled">
        <span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span>
        Download
    </a>
    <div class="btn-group">
        <a id="btn-export" role="button" class="btn btn-default navbar-btn disabled" data-nsname="stubs">
            <span class="glyphicon glyphicon-export" aria-hidden="true"></span>
            Export to <span class="ns-name">Stubs</span>
        </a>
        <button type="button" class="btn btn-default navbar-btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span class="caret"><!-- --></span>
            <span class="sr-only">Toggle Dropdown</span>
        </button>
        <ul class="dropdown-menu">
            <li><a href="#" data-nsname="stubs">Beginnetjes</a></li>
            <li><a href="#" data-nsname="main">Main</a></li>
        </ul>
    </div>
    <a id="btn-nuke" role="button" class="btn btn-default navbar-btn" title="Nuke Application Cache!">
        <span class="glyphicon glyphicon-erase" aria-hidden="true"></span>
        Kaboom!
    </a>
    <button id="btn-debug" type="button" class="btn btn-default navbar-btn" data-toggle="button" aria-pressed="false">
        <span class="glyphicon glyphicon-wrench" aria-hidden="true"></span>
        Debug
    </button>
    <div id="info-login" class="pull-left" {% if login.username is not defined %}style="display: none;"{% endif %}>
        <p class="navbar-text">Signed in as <span id="info-username">{{ login.username|default('Guest') }}</span></p>
        <button id="btn-logout" type="submit" class="btn btn-default">Logout</button>
    </div>
    <form id="form-login" class="navbar-form navbar-left" {% if login.username is defined %}style="display: none;"{% endif %}>
        <div class="form-group">
            <input type="text" class="form-control" name="username" placeholder="Username">
            <input type="password" class="form-control" name="password" placeholder="Password">
        </div>
        <button id="btn-login" type="submit" class="btn btn-default">Login</button>
    </form>
</div>

<table>
    <thead>
        <tr>
            <th data-checkbox="true"><!-- --></th>
            <th data-field="id">Winkel Nr</th>
            <th data-field="title">Titel van blad</th>
        </tr>
    </thead>
    <tbody>
    {% for blad in dao.bladenlijstMetTitels %}
        <tr>
            <td data-checkbox="true"><!-- --></td>
            <td data-field="id">{{ blad.WinkelNr }}</td>
            <td data-field="title">{{ blad.wikiID }}</td>
        </tr>
    {% endfor %}
    </tbody>
</table>
{% endblock %}

{% block stylesheets %}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.9.1/bootstrap-table.min.css">
{% endblock %}

{% block javascripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.9.1/bootstrap-table.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.9.1/bootstrap-table-locale-all.min.js"></script>
<script>
(function () {
    var wrapper     = $('#wrapper'),
        btnIndex    = $('#btn-index'),
        btnPreview  = $('#btn-preview'),
        btnDownload = $('#btn-download'),
        btnExport   = $('#btn-export'),
        btnExportNs = $('span.ns-name', btnExport),
        btnNsSelect = $('ul li a', btnExport.parent()),
        btnNuke     = $('#btn-nuke'),
        btnDebug    = $('#btn-debug'),
        btnLogin    = $('#btn-login'),
        btnLogout   = $('#btn-logout'),
        infoLogin   = $('#info-login'),
        infoUser    = $('#info-username'),
        formLogin   = $('#form-login'),
        bsTable     = $('table');

    var success = function (msg, target) {
        var target = (undefined === target) ? window : target,
            html   = `
            <div class="alert alert-success alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <strong>Success!</strong> ${msg}
            </div>`;

        $(target).prepend(html);
    };

    var warn = function (msg, target) {
        var target = (undefined === target) ? window : target,
            html   = `
            <div class="alert alert-warning alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <strong>Warning!</strong> ${msg}
            </div>`;

        $(target).prepend(html);
    };

    var onLoginSuccess = function (res) {
        if (true == res.success) {
            infoUser.html(res.username);
            infoLogin.show();
            formLogin.hide();
        } else {
            warn(res.message, wrapper);
        }
    };

    var onLogoutSuccess = function (res) {
        if (true == res.success) {
            formLogin[0].reset();
            formLogin.show();
            infoUser.html('');
            infoLogin.hide();
        }
    };

    var onExportSuccess = function (res) {
        var fn = (0 < res.success && 0 == res.failed) ? success : warn;

        fn(res.messages.join('<br>'), wrapper);
    };

    var onNukeSuccess = function (res) {
        if (res.success) {
            success('Cache cleared', wrapper);
        } else  {
            warn('Failed to clear cache', wrapper);
        }
    };

    var onBtnIndexClick = function () {
        window.location = '{{ path('index') }}';
    };

    var onBtnPreviewClick = function () {
        var row = bsTable.bootstrapTable('getSelections')[0],
            wid = row.id;

        window.location = '/preview/' + wid;
    };

    var onBtnDownloadClick = function () {
        var ids = bsTable.bootstrapTable('getSelections').map(function (row) {
            return row.id;
        });

        window.location = '{{ path('wiki_download') }}?ids=' + JSON.stringify(ids);
    };

    var onBtnExportClick = function (evt) {
        if (!window.confirm('Are you sure you want to export the selected items?')) {
            return;
        }

        var ids = bsTable.bootstrapTable('getSelections').map(function (row) {
            return row.id;
        });

        $.ajax('{{ path('wiki_edit') }}', {
            method : 'POST',
            success: onExportSuccess,
            data   : {
                ids: JSON.stringify(ids),
                ns : $(evt.target).data('nsname')
            }
        });
    };

    var onBtnNsSelectClick = function (evt) {
        var ns = $(evt.target).data('nsname');

        btnExport.data('nsname', ns);
        btnExportNs.html(ns.substr(0, 1).toUpperCase() + ns.substr(1))
    };

    var onBtnNukeClick = function () {
        if (!window.confirm('Are you sure you want to clear all the cached items?')) {
            return;
        }

        $.ajax('{{ path('nuke_cache') }}', {
            method : 'POST',
            success: onNukeSuccess
        });
    };

    var onBsTableCheck = function () {
        var selection = bsTable.bootstrapTable('getSelections');

        btnPreview.toggleClass('disabled', !(1 === selection.length));
        btnDownload.toggleClass('disabled', false);
        btnExport.toggleClass('disabled', false);
    };

    var onBtnLoginClick = function (evt) {
        evt.preventDefault();

        $.ajax('{{ path('wiki_login') }}', {
            method : 'POST',
            success: onLoginSuccess,
            data   : {
                username: $('input[name=username]').val(),
                password: $('input[name=password]').val()
            }
        });
    };

    var onBtnLogoutClick = function (evt) {
        evt.preventDefault();

        $.ajax('{{ path('wiki_logout') }}', {
            method : 'POST',
            success: onLogoutSuccess
        });
    };

    var onBsTableUnCheck = function () {
        var selection = bsTable.bootstrapTable('getSelections');

        btnPreview.toggleClass('disabled', !(1 === selection.length));
        btnDownload.toggleClass('disabled', (0 === selection.length));
        btnExport.toggleClass('disabled', (0 === selection.length));
    };

    var createDebugHandler = function () {
        var debugEnabled = false,
            noop         = function () {},
            xdebug       = function (xhr, o) {
                var separator = (-1 == '?'.indexOf(o.url)) ? '?' : '&';
                o.url = o.url + separator + 'XDEBUG_SESSION_START';
            };

        return function (evt) {
            evt.preventDefault();

            $.ajaxSettings.beforeSend = (debugEnabled) ? noop : xdebug;
            debugEnabled = !debugEnabled;
        };
    };

    btnIndex.on('click', onBtnIndexClick);
    btnPreview.on('click', onBtnPreviewClick);
    btnDownload.on('click', onBtnDownloadClick);
    btnExport.on('click', onBtnExportClick);
    btnNsSelect.on('click', onBtnNsSelectClick);
    btnNuke.on('click', onBtnNukeClick);
    btnDebug.on('click', createDebugHandler());
    btnLogin.on('click', onBtnLoginClick);
    btnLogout.on('click', onBtnLogoutClick);

    bsTable.bootstrapTable({
        // options
        search          : true,
        striped         : true,
        clickToSelect   : true,
        maintainSelected: true,
        locale          : 'nl-NL',

        // event listeners
        onCheck     : onBsTableCheck,
        onUncheck   : onBsTableUnCheck,
        onCheckAll  : onBsTableCheck,
        onUncheckAll: onBsTableUnCheck
    });
}());
</script>
{% endblock %}
